apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus-rules-conf
  namespace: monitoring
data:
  prometheus_alerts.yml: |
    groups:
    - name: prometheus_alerts
      rules:
      - alert: SYSTEM/PrometheusNotConnectedToAlertmanagers
        expr: (sum by(instance) (prometheus_notifications_alertmanagers_discovered)) < 1
        for: 1m
        labels:
          severity: warning
        annotations:
          description: Prometheus in {{ $labels.instance}} is not connected to Alertmanager

  node_alerts.yml: |
    groups:
    - name: node_rules
      rules:
        - record: quota:container:cpu
          expr: sum by(container, pod, namespace)(rate(container_cpu_usage_seconds_total{namespace="default"}[3m]) * 100)/sum by(container, pod, namespace)(kube_pod_container_resource_requests_cpu_cores{namespace="default"}) * 100
 
        - record: quota:container:memory
          expr: sum by(container, pod, namespace) (rate(container_memory_usage_bytes{namespace="default"}[3m])* 100) / sum by(container, pod, namespace) (kube_pod_container_resource_requests_memory_bytes{namespace="default"}) * 100

        - record: container:frequently:restarting
          expr: increase(kube_pod_container_status_restarts_total{namespace="default"}[1h])

        - record: instance:node:mem
          expr: 100 * (1 - node_memory_MemAvailable_bytes{job="node-exporter"} / node_memory_MemTotal_bytes{job="node-exporter"})

        - record: instance:diskspace:low
          expr: (sum by(instance, mountpoint, device, namespace) (node_filesystem_free_bytes{mountpoint="/newvol"}) / sum by(instance, mountpoint, device, namespace) (node_filesystem_size_bytes{mountpoint="/newvol"}) * 100)

        - record: instance:container:mem
          expr: (sum by(instance, name, container, pod, namespace) (container_memory_usage_bytes{container="my-nginx"}) / sum by(instance, name, container, pod, namespace) (container_spec_memory_limit_bytes{container="my-nginx"}) * 100)

        - record: instance:container:cpu
          expr: (sum by(instance, name, container, cpu, pod, namespace) (rate(container_cpu_usage_seconds_total{container="my-nginx"}[3m])) * 100)

        - record: instance:container:freespace
          expr: sum by(instance, name, container, namespace)(1-container_fs_usage_bytes{container="my-nginx"}/container_fs_limit_bytes{container="my-nginx"})*100 

    - name: k8s_alerts
      rules:
      - alert: "k8s_status"
        expr: up{kubernetes_namespace="kube-system",k8s_app="nodelocaldns"} < 1
        for: 10m
        labels:
          severity: critical
        annotations:
          message: Instance {{ $labels.instance }} is down!

      - alert: "KubeJobFailed"
        expr: kube_job_status_failed{job="kube-state-metrics",namespace=~"(kube.*|default)"} > 0
        for: 1h
        labels:
          severity: warning
        annotations:
          message: Job {{ $labels.namespaces }}/{{ $labels.job }} failed to complete.

      - alert: "HIGH_QUOTA_MEMORY_USAGE"
        expr: quota:container:memory > 90
        for: 10m
        labels:
          severity: warning
        annotations:
          description: "{{ $labels.namespace | toUpper }}: {{ $labels.pod }}({{ $labels.container }}) memory load is > 90%\n  VALUE = {{ $value }}"        
      
      - alert: "HIGH_QUOTA_CPU_USAGE"
        expr: quota:container:cpu > 100
        for: 10m
        labels:
          severity: warning
        annotations:
          description: "{{ $labels.namespace | toUpper }}: {{ $labels.pod }}({{ $labels.container }}) CPU load is > 100%\n  VALUE = {{ $value }}"

      - alert: "HIGH_CONTAINER_frequently_restarting"
        expr: container:frequently:restarting > 5
        for: 10m
        labels:
          severity: warning
        annotations:
          description: "{{ $labels.namespace | toUpper }}: {{ $labels.pod }}({{ $labels.container }}) is frequently restarting!"

    - name: custom_alerts
      rules:          
      - alert: "HIGH_NODE_MEMORY_USAGE"
        expr: instance:node:mem > 70
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "Node memory is filling up (< 30% left)\n  VALUE = {{ $value }}"

      - alert: "Container_LOW_DISK_SPACE"
        expr: instance:container:freespace  < 20
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "Container Volume free space is less then 20%\n  VALUE = {{ $value }}"

      - alert: "LOW_DISK_SPACE"
        expr: instance:diskspace:low  < 20
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "Volume {{ $labels.device }} free space is less then 20%\n  VALUE = {{ $value }}"

      - alert: "HIGH_NODE_CPU_USAGE"
        expr: instance:node_cpu:avg_rate5m > 80
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "CPU load is > 80%\n  VALUE = {{ $value }}"

      - alert: "HIGH_CONTAINER_MEMORY_USAGE"
        expr: instance:container:mem > 80
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "Container Memory usage is above 80%\n  VALUE = {{ $value }}"

      - alert: "HIGH_CONTAINER_CPU_USAGE"
        expr: instance:container:cpu > 80
        for: 30s
        labels:
          severity: warning
        annotations:
          description: "Container CPU usage is above 80%\n  VALUE = {{ $value }}"

      - alert: "CRITICAL_NODE_MEMORY_USAGE"
        expr: instance:node:mem > 95
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "Node memory is filling up (< 5% left)\n  VALUE = {{ $value }}"
        
      - alert: "CONTAINER_NO_DISK_SPACE"
        expr: instance:container:freespace  < 10
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "Container Volume free space is less then 10%\n  VALUE = {{ $value }}"
        
      - alert: "NO_DISK_SPACE"
        expr: instance:diskspace:low  < 10
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "Volume {{ $labels.device }} free space is less then 10%\n  VALUE = {{ $value }}"
        
      - alert: "CRITICAL_NODE_CPU_USAGE"
        expr: instance:node_cpu:avg_rate5m > 90
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "CPU load is > 90%\n  VALUE = {{ $value }}"
      
      - alert: "CRITICAL_CONTAINER_MEMORY_USAGE"
        expr: instance:container:mem > 90
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "Container Memory usage is above 95%\n  VALUE = {{ $value }}"
        
      - alert: "CRITICAL_CONTAINER_CPU_USAGE"
        expr: instance:container:cpu > 90
        for: 30s
        labels:
          severity: critical
        annotations:
          description: "Container CPU usage in instance is above 90%\n VALUE = {{ humanize $value }}%."
          
  kubelet.yml: |
    groups:
    - name: kube-state-metrics
      rules:
      - alert: KUBELET/KubeStateMetricsListErrors
        annotations:
          message: kube-state-metrics is experiencing errors at an elevated rate in list
            operations. This is likely causing it to not be able to expose metrics about
            Kubernetes objects correctly or at all.
        expr: |
          (sum(rate(kube_state_metrics_list_total{job="kube-state-metrics",result="error"}[5m]))
            /
          sum(rate(kube_state_metrics_list_total{job="kube-state-metrics"}[5m])))
          > 0.01
        for: 1m
        labels:
          severity: critical
      - alert: KUBELET/KubeStateMetricsWatchErrors
        annotations:
          message: kube-state-metrics is experiencing errors at an elevated rate in watch
            operations. This is likely causing it to not be able to expose metrics about
            Kubernetes objects correctly or at all.
        expr: |
          (sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics",result="error"}[5m]))
            /
          sum(rate(kube_state_metrics_watch_total{job="kube-state-metrics"}[5m])))
          > 0.01
        for: 1m
        labels:
          severity: critical
    
  node_rules.yml: |
    groups:
    - name: node_rules
      rules:
        - record: instance:node_cpu:avg_rate5m
          expr: 100 - avg by(instance) (irate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m])) * 100
        - record: instance:node_memory_usage:percentage
          expr: ((sum(node_memory_MemTotal_bytes) - sum(node_memory_MemFree_bytes) - sum(node_memory_Buffers_bytes) - sum(node_memory_Cached_bytes)) / sum(node_memory_MemTotal_bytes)) * 100
        - record: instance:root:node_filesystem_usage:percentage
          expr: (node_filesystem_size_bytes{mountpoint="/rootfs"} - node_filesystem_free_bytes{mountpoint="/rootfs"}) /node_filesystem_size_bytes{mountpoint="/rootfs"} * 100